
/** 
 *     <div id="parent">
 *             <div id="child1">
 *              <h1>Im h1 tag</h1>
 *              <h2></h2>im h2 tag</h2>
 *             </div>
 *         <div id="child2">
 *              <h1>Im h1 tag</h1>
 *              <h2></h2>im h2 tag</h2>
 *             </div>
 *      </div>
 * 
 * 
 * 
*/

const parent=React.createElement("div",{id:"parent"},
       [ React.createElement("div",{id:"child1"},
        [React.createElement("h1",{},"I'm h1 tag"),React.createElement("h2",{},"I'm h2 tag")]
        ),
        React.createElement("div",{id:"child2"},
        [React.createElement("h1",{},"I'm h1 tag"),React.createElement("h2",{},"I'm h2 tag")]
        )]
);
     
const root=ReactDOM.createRoot(document.getElementById("root"))

root.render(parent);


-----------------------------------------------------------------------------------------------------------------------


  
-->First need to open in git bash  (git config --global user.email "pvnkmrdsr@gmail.com")
-->(git config --local user.name "Dasari-Pavan")

git hub  setup in vscode

-->git init
-->git branch -m main
-->git add .
-->git commit -m "somename"
-->git remote add origin https:------
-->git push -u origin main


-->how to add new files to existing git repository

Explanation: To communicate with the remote git repo you need to link it with a folder in your local machine (git init). After this, add the remote repo link (git remote add origin <URL>) and pull it (git pull origin master). Now, once your local folder is synchronized with the remote repo you're free to add any new files (git add <file>, git commit -m <message> and git push origin master).

----------------------------------------------------------------------------

npm init--for install package.json
then install npm install -D parcel--to install devdependencie not normal devdependencie
thats why we use -D 
they are two type dependencies

next node_modules keep in ---.gitignore file because we dont need to put them 
in github because we can re initialise them again 
by package.json  and package.lock-json and so we have to keep package.json push into
git hub repositry---npm install -- means we will install nodemodules again
so thats why we no need to keep in github

npx parcel index.html-->so  will go built server by igniting app

normal way install react not by cdn depending 
so-->npm install react
npm install react-dom  or npm i react both same 

how to use react in js

import react from "react";
import ReactDOM from 



#Parcel
-Dev Build
-Local Server
-HMR = Hot Module Replacement
-File Watching Algorithm-written in c++
-caching-faster Builds
-Images optimization
-Minification
-Bundling
-compressing
-consistent Handling
-code splitting
-Differential Bundling -support older browsers
-Diagnostic
-Error Handling
-HTTPs
-Tree Shaking-remove unused code
-Different dev and prod bundles

while building prod bunlde so we have to remove main in package.json
then only next will build 
cmd-->npx parcel build index.html

//React Element
// const heading1=(
//     <h1 className="head" tabIndex="4">React using jsx</h1>
// );

const Title=()=>(
    <h1 className="head" tabIndex="5">
        React is demanding in Market !
    </h1>
);

//React functional component
const HeadingComponent=()=>(
    <div id="container">
        <Title/>
        <h1 className="heading">React Functional component</h1>
    </div>
);

const root=ReactDOM.createRoot(document.getElementById("root"));

root.render(<HeadingComponent/>);




------------------------------------------------------------------------
import React from "react";
import ReactDOM from "react-dom/client";

// React.createElement=>objects =>HTMLElement(render)

// const heading=React.createElement("h1",{id:"heading"},"React" );

// console.log(heading);

//jsx
/* const jsxh=<h1 id="heading">Pavan kumar</h1>
console.log(jsxh);

const root=ReactDOM.createRoot(document.getElementById("root"));

root.render(jsxh);*/

//React Element
// const heading1=(
//     <h1 className="head" tabIndex="4">React using jsx</h1>
// );

const Title=()=>(
    <h1 className="head" tabIndex="5">
        React is demanding in Market !
    </h1>
);

//React functional component
const HeadingComponent=()=>(
    <div id="container">
        {10*8}
        <Title/>
        <h1 className="heading">React Functional component</h1>
    </div>
);

const root=ReactDOM.createRoot(document.getElementById("root"));

root.render(<HeadingComponent/>);

